@page "/dashboard"
@using Newtonsoft.Json
@inject HttpClient httpClient
@inject IDialogService DialogService
@inject IJSRuntime JS

<h2>Dashboard</h2>

<MudButton Variant="Variant.Filled" OnClick="DownloadFileFromURL">
    Stáhnout záznamy
</MudButton>

<MudContainer MaxWidth="MaxWidth.ExtraLarge">
    <MudGrid>
        <MudItem xs="12" sm="6" md="4">            
            <MudCard Style="height: 200px;">
                <MudCardHeader>
                    <CardHeaderContent>
                        <MudText Typo="Typo.h6">Počet záznamů</MudText>
                    </CardHeaderContent>
                </MudCardHeader>
                <MudCardContent>
                    <MudText Typo="Typo.h4" Align="Align.Center">@Elements.Count()</MudText>
                </MudCardContent>
            </MudCard>
        </MudItem>
        <MudItem xs="12" sm="6" md="4">
            <MudCard Style="height: 200px;">
                <MudCardHeader>
                    <CardHeaderContent>
                        <MudText Typo="Typo.h6">Počet uživatelů</MudText>
                    </CardHeaderContent>
                </MudCardHeader>
                <MudCardContent>
                    <MudText Typo="Typo.h4" Align="Align.Center">@Users.Count()</MudText>
                </MudCardContent>
            </MudCard>
        </MudItem>
        <MudItem xs="12" sm="12" md="4">
            <MudCard Style="height: 200px;">
                <MudCardHeader>
                    <CardHeaderContent>
                        <MudText Typo="Typo.h6">Typy tiskáren</MudText>
                    </CardHeaderContent>
                </MudCardHeader>
                <MudCardContent>
                    <MudText Typo="Typo.h4" Align="Align.Center">@Printers.Count()</MudText>
                </MudCardContent>
            </MudCard>
        </MudItem>
        <MudItem xs="12" sm="6">
                <MudCard Style="height: 100%;">
                    <MudCardHeader>
                        <CardHeaderContent>
                            <MudText Typo="Typo.h6">Splněno dle odboru</MudText>
                        </CardHeaderContent>
                    </MudCardHeader>
                    <MudCardContent>
                        <MudPaper Elevation="3" Class="p-2">
                            <MudSelect T="string" Label="Odbor" @bind-Value="Odbor" SelectedValuesChanged="ValueChanged" AnchorOrigin="Origin.BottomCenter">
                                @foreach (var item in _departments)
                                {
                                    <MudSelectItem Value="@(item)" />                                
                                }
                            </MudSelect>
                        </MudPaper>
                        <MudPaper Elevation="3" Class="p-2 mt-4">
                            <MudText Typo="Typo.subtitle1" Color="Color.Inherit">
                                <b>@(100 - Percentage)%</b>
                            </MudText>
                            <MudProgressLinear Color="Color.Success" Rounded="true" Size="Size.Large" Value="@(100 - Percentage)" />
                        </MudPaper>
                        <MudPaper Elevation="3" Class="p-2 mt-4">
                            <MudText Typo="Typo.subtitle1" Color="Color.Inherit">
                                Celkový počet uživatelů: @Counter.TotalCount
                            </MudText>
                            <MudText Typo="Typo.subtitle1" Color="Color.Inherit">
                                Počet vytvořných požadavků: @(Counter.TotalCount - Counter.Count)
                            </MudText>
                        <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="ShowUserWithoutPrinter">Zobrazit další</MudButton>
                        </MudPaper>
                    </MudCardContent>
                </MudCard>
        </MudItem>
        <MudItem xs="12" sm="6">
            <MudCard Style="height: 100%;">
                <MudCardHeader>
                    <CardHeaderContent>
                        <MudText Typo="Typo.h6">Poslední záznamy</MudText>
                    </CardHeaderContent>
                </MudCardHeader>
                <MudCardContent>
                    <MudTable Items="@Elements.TakeLast(5).Reverse()" Hover="true" Breakpoint="Breakpoint.Sm" LoadingProgressColor="Color.Info">
                        <HeaderContent>
                            <MudTh>Nr</MudTh>
                            <MudTh>Uživatel</MudTh>
                            <MudTh>Požadovaná tiskárna</MudTh>
                            <MudTh>Navrhovaná tiskárna</MudTh>
                        </HeaderContent>
                        <RowTemplate>
                            <MudTd DataLabel="Nr">@context.Id</MudTd>
                                <MudTd DataLabel="Jméno zaměstnance">@Users.SingleOrDefault(x => x.Id == context.UserId).Name</MudTd>
                            <MudTd DataLabel="Kancelář">@context.RequestedPrinter</MudTd>
                            <MudTd DataLabel="Odbor">@context.SuggestedPrinter</MudTd>
                        </RowTemplate>
                    </MudTable>
                </MudCardContent>
            </MudCard>
        </MudItem>
        <MudItem xs="12">
            <MudCard Style="height: 100%;">
                <MudCardHeader>
                    <CardHeaderContent>
                        <MudText Typo="Typo.h6">Chybějící záznamy</MudText>
                    </CardHeaderContent>
                </MudCardHeader>
                <MudCardContent>
                        <MudTable Items="@UsersWithouPrinter" T="dtUser" Hover="true" Breakpoint="Breakpoint.Sm">
                            <HeaderContent>
                                <MudTh>Nr</MudTh>
                                <MudTh>Jméno</MudTh>
                                <MudTh>Kancelář</MudTh>
                                <MudTh>Odbor</MudTh>
                            </HeaderContent>
                            <RowTemplate>
                                <MudTd DataLabel="Nr">@context.Id</MudTd>
                                <MudTd DataLabel="Sign">@context.Name</MudTd>
                                <MudTd DataLabel="Name">@context.Office</MudTd>
                                <MudTd DataLabel="Name">@context.Department</MudTd>
                            </RowTemplate>
                        </MudTable>
                </MudCardContent>
            </MudCard>
        </MudItem>
    </MudGrid>
</MudContainer>

    <script>
        window.triggerFileDownload = (fileName, url) => {
            const anchorElement = document.createElement('a');
            anchorElement.href = url;
            anchorElement.download = fileName ?? '';
            anchorElement.click();
            anchorElement.remove();
        }
    </script>

    @code {
    private IEnumerable<dtSolution> Elements = new List<dtSolution>();
    private IEnumerable<dtUser> Users = new List<dtUser>();
    private IEnumerable<dtPrinters> Printers = new List<dtPrinters>();
    private IEnumerable<dtUser> UsersWithouPrinter = new List<dtUser>();
    private DashboardCounter Counter = new DashboardCounter();
    private double Percentage = 0;
    private string[] _departments = new string[30];
    private string Odbor = "Odbor informatiky";

    protected override async Task OnInitializedAsync()
    {
        var result = await httpClient.GetFromJsonAsync<List<dtSolution>>("api/solution");
        Users = await httpClient.GetFromJsonAsync<List<dtUser>>("api/user");
        Printers = await httpClient.GetFromJsonAsync<List<dtPrinters>>("api/printer");
        Counter = await httpClient.GetFromJsonAsync<DashboardCounter>($"api/dashboard/users?odbor={Odbor}");
        _departments = await httpClient.GetFromJsonAsync<string[]>("/api/dashboard");

        UsersWithouPrinter = await httpClient.GetFromJsonAsync<List<dtUser>>("api/solution/withoutprinter");

        Elements = result;

        this.Percentage = Math.Round((Convert.ToDouble(this.Counter.Count) / Convert.ToDouble(this.Counter.TotalCount)) * 100.00, 2);
    }

    private async Task ValueChanged()
    {
        Counter = await httpClient.GetFromJsonAsync<DashboardCounter>($"api/dashboard/users?odbor={Odbor}");
        this.Percentage = Math.Round((Convert.ToDouble(this.Counter.Count) / Convert.ToDouble(this.Counter.TotalCount)) * 100.00, 2);
    }

    private async Task ShowUserWithoutPrinter()
    {
        string idsFormat = string.Empty;
        foreach (var item in Counter.Ids)
        {
            idsFormat += $"{item},";
        }
        idsFormat = idsFormat.Substring(0, idsFormat.Length - 1);
        var result = await httpClient.GetFromJsonAsync<List<dtUser>>($"api/dashboard/list-users?ids={idsFormat}");

        var parameters = new DialogParameters<UsersWithoutPrinter> { { x => x.Users, result } };

        DialogOptions opt = new DialogOptions();
        opt.MaxWidth = MaxWidth.Medium;
        opt.FullWidth = true;
        opt.DisableBackdropClick = true;

        var dialog = await DialogService.ShowAsync<UsersWithoutPrinter>("Uživatelé bez tiskáren", parameters, opt);
    }

    private async Task DownloadFileFromURL()
    {
        string result = await httpClient.GetFromJsonAsync<string>("api/dashboard/export");

        if (result == "Chyba vole")
        {
            Console.WriteLine("Chyba vole");
        }
        else
        {
            var fileName = "export.csv";
            var fileURL = $"\\wwwroot\\{result}";
            await JS.InvokeVoidAsync("triggerFileDownload", fileName, fileURL);            
        }

    }
}
