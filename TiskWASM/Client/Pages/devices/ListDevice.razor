@page "/list-device"
@inject HttpClient client
@inject IDialogService dialog
@inject ISnackbar snackbar

<h2>Všechna zařízení</h2>

<MudTable Items="@Devices" Hover="true" Loading="_loading" LoadingProgressColor="Color.Info">
    <HeaderContent>
        <MudTh>Id</MudTh>
        <MudTh>Název zařízení</MudTh>
        <MudTh>Popis zařízení</MudTh>
        <MudTh></MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="Nr">@context.Id</MudTd>
        <MudTd DataLabel="Název">@context.Name</MudTd>
        <MudTd DataLabel="Popis">@context.Description</MudTd>
        <MudTd DataLabel="">
            <MudMenu Variant="Variant.Filled" Icon="@Icons.Material.Filled.MoreHoriz" Color="Color.Primary">
                <MudMenuItem IconSize="Size.Small" IconColor="Color.Primary" Icon="@Icons.Material.Filled.Edit" Href="@($"edit-device/{context.Id}")">Upravit</MudMenuItem>
                <MudMenuItem IconSize="Size.Small" IconColor="Color.Error" Icon="@Icons.Material.Filled.Delete" OnClick="()=>DeleteDialog(context.Id)">Smazat</MudMenuItem>
            </MudMenu>
        </MudTd>
    </RowTemplate>
</MudTable>

    @code {
    private IEnumerable<dtDevice> Devices = new List<dtDevice>();
    private bool _loading = false;

    protected override async Task OnInitializedAsync()
    {
        _loading = true;
        Devices = await client.GetFromJsonAsync<List<dtDevice>>("/api/device");
        _loading = false;
    }

    public async Task DeleteDialog(int id)
    {
        var options = new DialogOptions() { CloseButton = true, MaxWidth = MaxWidth.Medium };

        var deleteDialog = await dialog.ShowAsync<ConfirmDelete>("Smazat zařízení?", options);
        var confirmed = await deleteDialog.Result;
        if (!confirmed.Canceled)
        {
            var result = await client.DeleteAsync($"/api/device/{id}");
            if (result.IsSuccessStatusCode)
            {
                snackbar.Add("Zařízení bylo smazáno", Severity.Success);
            }
            else
            {
                snackbar.Add("Chyba při mazání zařízení", Severity.Error);
            }
            Devices = await client.GetFromJsonAsync<List<dtDevice>>("/api/device");
        }
    }
}